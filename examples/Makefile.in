###
###	@configure_input@
###

.SUFFIXES:	.ml .mli .cmx .cmi .cmo .cmxa .cma .c .o

INSTALLDIR	= @INSTALLDIR@

OCBYTE		= @OCAMLC@ -thread
OCOPT		= @OCAMLOPT@ -thread

OC		= @OCAMLC@
CC		= @CC@

FLAGS		= -I .. 
LFLAGS		= -I .. -ccopt -L..
LIBS		= 

OCURLLIB	= curl.cma unix.cma threads.cma
OCURLOPTLIB	= curl.cmxa unix.cmxa threads.cmxa

ifeq (@OCAMLBEST@,opt)
TARGETS	= ocurl ocurl.opt oput oput.opt ominimal ominimal.opt ossl ossl.opt \
	ocurl_test_threads ocurl_test_threads.opt opar opar.opt
else
TARGETS = ocurl oput ominimal ossl ocurl_test_threads opar
endif

all:
		@$(MAKE) depend
		@$(MAKE) targets

targets:	$(TARGETS)

%: %.cmo
		$(OCBYTE) -custom $(LFLAGS) $(OCURLLIB) $< -o $@

%.opt: %.cmx
		$(OCOPT) $(LFLAGS) $(OCURLOPTLIB) $< -o $@

.ml.cmx:
		$(OCOPT) -c $(FLAGS) $< -o $@

.mli.cmi:
		$(OCBYTE) -c $(FLAGS) $< -o $@

.ml.cmo:
		$(OCBYTE) -c $(FLAGS) $< -o $@

clean:
		@rm -f $(TARGETS) *~ *.cm* *.o *.a .depend core

depend:
		@ocamldep *.mli *.ml > .depend

ifeq ($(wildcard .depend),.depend)
ifneq ($(MAKECMDGOALS),clean)
include .depend
endif
endif
