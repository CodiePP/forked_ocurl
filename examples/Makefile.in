###
###	@configure_input@
###

.PHONY: clean
.PRECIOUS: %.cmx %.cmo %.cmi
.SUFFIXES: .ml .mli .cmx .cmi .cmo

OCBYTE		= @OCAMLC@ -thread
OCOPT		= @OCAMLOPT@ -thread
FINDLIB = @OCAMLFIND@

FLAGS		= -I .. 
LFLAGS		= -I .. -ccopt -L..

OCURLLIB	= curl.cma unix.cma threads.cma
OCURLOPTLIB	= curl.cmxa unix.cmxa threads.cmxa

TARGETS = ocurl oput ominimal ossl ocurl_test_threads opar test_cb_exn
ifneq (@OCAML_PKG_lwt@,no)
TARGETS += test_lwt
endif

ifeq (@OCAMLBEST@,opt)
TARGETS	+= ocurl.opt oput.opt ominimal.opt ossl.opt ocurl_test_threads.opt opar.opt test_cb_exn.opt
ifneq (@OCAML_PKG_lwt@,no)
TARGETS += test_lwt.opt
endif
endif

all:	$(TARGETS)

test_lwt: test_lwt.ml
	$(FINDLIB) c -custom -linkpkg -package lwt.unix $(LFLAGS) curl.cma curl_lwt.cmo $< -o $@

test_lwt.opt: test_lwt.ml
	$(FINDLIB) opt -linkpkg -package lwt.unix $(LFLAGS) curl.cmxa curl_lwt.cmx $< -o $@

%: %.cmo
		$(OCBYTE) -custom $(LFLAGS) $(OCURLLIB) $< -o $@

%.opt: %.cmx
		$(OCOPT) $(LFLAGS) $(OCURLOPTLIB) $< -o $@

.ml.cmx:
		$(OCOPT) -c $(FLAGS) $< -o $@

.mli.cmi:
		$(OCBYTE) -c $(FLAGS) $< -o $@

.ml.cmo:
		$(OCBYTE) -c $(FLAGS) $< -o $@

clean:
		@rm -f $(TARGETS) *.cm* *.o *.a
